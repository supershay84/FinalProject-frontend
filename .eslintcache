[{"/Users/supershay/SEIR/void-frontend/src/reportWebVitals.js":"1","/Users/supershay/SEIR/void-frontend/src/index.js":"2","/Users/supershay/SEIR/void-frontend/src/App.js":"3","/Users/supershay/SEIR/void-frontend/src/Pages/signup.js":"4","/Users/supershay/SEIR/void-frontend/src/Pages/home.js":"5","/Users/supershay/SEIR/void-frontend/src/Components/NavBar.js":"6","/Users/supershay/SEIR/void-frontend/src/Pages/login.js":"7","/Users/supershay/SEIR/void-frontend/src/Components/Scream.js":"8","/Users/supershay/SEIR/void-frontend/src/utilities/themes.js":"9","/Users/supershay/SEIR/void-frontend/src/utilities/AuthRoute.js":"10"},{"size":362,"mtime":1611950539704,"results":"11","hashOfConfig":"12"},{"size":478,"mtime":1611950884988,"results":"13","hashOfConfig":"12"},{"size":1504,"mtime":1612167003639,"results":"14","hashOfConfig":"12"},{"size":6124,"mtime":1612165373402,"results":"15","hashOfConfig":"12"},{"size":1050,"mtime":1612157213623,"results":"16","hashOfConfig":"12"},{"size":723,"mtime":1612167106632,"results":"17","hashOfConfig":"12"},{"size":4691,"mtime":1612164885180,"results":"18","hashOfConfig":"12"},{"size":1896,"mtime":1612203514427,"results":"19","hashOfConfig":"12"},{"size":582,"mtime":1612165773559,"results":"20","hashOfConfig":"12"},{"size":329,"mtime":1612166931706,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f7xm98",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},"/Users/supershay/SEIR/void-frontend/src/reportWebVitals.js",[],"/Users/supershay/SEIR/void-frontend/src/index.js",[],"/Users/supershay/SEIR/void-frontend/src/App.js",[],["45","46"],"/Users/supershay/SEIR/void-frontend/src/Pages/signup.js",["47"],"import React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '../images/images-1.png';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { relativeTime } from 'dayjs';\n\nconst styles = {\n    form: {\n        textAlign: 'center'\n    },\n    image: {\n        margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n        margin: '20px auto 20px auto'\n    },\n    textField: {\n        margin: '20px auto 20px auto'\n    },\n    button: {\n        marginTop: 20,\n        position: 'relative'\n    \n    },\n    customError: {\n        color: 'red',\n        fontSize: '0.8rem'\n    },\n    progress: {\n        position: 'absolute'\n    }\n};\n\nclass signup extends Component {\n    constructor(){\n        super();\n        this.state= {\n            email: '',\n            password: '',\n            confirmPassword: '',\n            handle: '',\n            loading: false,\n            errors: {}\n        }\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            loading: true\n        });\n        const newUserData = {\n            email: this.state.email,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword,\n            handle: this.state.handle\n        };\n        axios.post('/signup', newUserData)\n            .then((res) => {\n                console.log(res.data);\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n                this.setState({\n                    loading: false\n                });\n                // REDIRECT TO HOME PAGE AFTER SUCCESSFULLY LOGGIMG IN\n                this.props.history.push('/');\n            })\n            .catch((err) => {\n                this.setState({  \n                    errors: err.response.data,\n                    loading: false\n                })\n            })\n    };\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    render() {\n        const { classes } = this.props;\n        const { errors, loading } = this.state;\n        return (\n           <Grid container className={classes.form}>\n               <Grid item sm/>\n               <Grid item sm>\n                   <img src={Icon} className={classes.image} alt=\"void\"/>\n                    <Typography variant=\"h4\" className={classes.pageTitle}>Signup</Typography>\n                    <form noValidate onSubmit={this.handleSubmit}>\n                        <TextField id=\"email\" \n                                   name=\"email\" type=\"email\" label=\"Email\" className={classes.textField}\n                                   helperText={errors.email} \n                                   error={errors.email ? true : false }\n                                   value={this.state.email} \n                                   onChange={this.handleChange} \n                                   fullWidth/> \n                        <TextField id=\"password\" \n                                   name=\"password\" \n                                   type=\"password\" \n                                   label=\"Password\" \n                                   className={classes.textField} \n                                   helperText={errors.password} \n                                   error={errors.password ? true : false }\n                                   value={this.state.password} \n                                   onChange={this.handleChange} \n                                   fullWidth/>\n                                   <TextField id=\"confirmPassword\" \n                                   name=\"confirmPassword\" \n                                   type=\"password\" \n                                   label=\"Confirm Password\" \n                                   className={classes.textField} \n                                   helperText={errors.confirmPassword} \n                                   error={errors.confirmPassword ? true : false }\n                                   value={this.state.confirmPassword} \n                                   onChange={this.handleChange} \n                                   fullWidth/>\n                                   <TextField id=\"handle\" \n                                   name=\"handle\" \n                                   type=\"text\" \n                                   label=\"Username\" \n                                   className={classes.textField} \n                                   helperText={errors.handle} \n                                   error={errors.handle ? true : false }\n                                   value={this.state.handle} \n                                   onChange={this.handleChange} \n                                   fullWidth/>\n                        {errors.general && (\n                            <Typography variant=\"body2\" className={classes.customError}>{errors.general}\n                            </Typography>\n                        )}\n                        <Button type=\"submit\" \n                                variant=\"contained\" \n                                color=\"primary\" \n                                className={classes.button}\n                                disabled={loading}>SIGNUP\n                                {loading && (\n                                    <LinearProgress variant=\"determinate\" className={classes.progress}/>\n                                )}\n                        </Button>\n                        <br/>\n                        <small>Login <Link to=\"/login\">Here</Link></small>\n                        \n                    </form>\n               </Grid>\n               <Grid item sm/>\n           </Grid>\n        )\n    }\n}\n\nsignup.propTypes = {\n    classes: PropTypes.object.isRequired\n}\nexport default withStyles(styles)(signup);\n\n","/Users/supershay/SEIR/void-frontend/src/Pages/home.js",[],"/Users/supershay/SEIR/void-frontend/src/Components/NavBar.js",[],"/Users/supershay/SEIR/void-frontend/src/Pages/login.js",[],"/Users/supershay/SEIR/void-frontend/src/Components/Scream.js",["48","49","50","51","52","53"],"/Users/supershay/SEIR/void-frontend/src/utilities/themes.js",["54"],"/Users/supershay/SEIR/void-frontend/src/utilities/AuthRoute.js",["55"],"import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\n    <Route\n    {...rest}\n    render={(props) => authenticated === true ? <Redirect to=\"/\"/> : <Component {...props}/>\n    }\n    />\n);\n\nexport default AuthRoute;",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":12,"column":10,"nodeType":"62","messageId":"63","endLine":12,"endColumn":22},{"ruleId":"60","severity":1,"message":"64","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":22},{"ruleId":"60","severity":1,"message":"65","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":19},{"ruleId":"60","severity":1,"message":"66","line":32,"column":54,"nodeType":"62","messageId":"63","endLine":32,"endColumn":63},{"ruleId":"60","severity":1,"message":"67","line":32,"column":77,"nodeType":"62","messageId":"63","endLine":32,"endColumn":85},{"ruleId":"60","severity":1,"message":"68","line":32,"column":87,"nodeType":"62","messageId":"63","endLine":32,"endColumn":96},{"ruleId":"60","severity":1,"message":"69","line":32,"column":98,"nodeType":"62","messageId":"63","endLine":32,"endColumn":110},{"ruleId":"70","severity":1,"message":"71","line":1,"column":1,"nodeType":"72","endLine":37,"endColumn":3},{"ruleId":"60","severity":1,"message":"73","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'relativeTime' is defined but never used.","Identifier","unusedVar","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'userImage' is assigned a value but never used.","'screamId' is assigned a value but never used.","'likeCount' is assigned a value but never used.","'commentCount' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]